"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class DataQueueEntry {
    constructor(buf, entry) {
        this.data = buf;
        this.next = entry;
    }
}
exports.DataQueueEntry = DataQueueEntry;
class DataQueue {
    constructor() {
        this.length = 0;
    }
    push(buf) {
        const entry = new DataQueueEntry(buf);
        if (this.tail) {
            this.tail.next = entry;
        }
        else {
            this.head = entry;
        }
        this.tail = entry;
        this.length += 1;
    }
    shift() {
        if (!this.head) {
            return null;
        }
        const ret = this.head.data;
        if (this.length === 1) {
            this.head = this.tail = undefined;
        }
        else {
            this.head = this.head.next;
        }
        this.length -= 1;
        return ret;
    }
    read(n) {
        if (!this.head) {
            return undefined;
        }
        let bytesLeft = n;
        const chunks = [];
        while (bytesLeft > 0 && this.length > 0) {
            let chunk = this.head.data;
            if (chunk.length > bytesLeft) {
                this.head.data = chunk.slice(bytesLeft);
                chunk = chunk.slice(0, bytesLeft);
                chunks.push(chunk);
                bytesLeft -= chunk.length;
            }
            else {
                this.shift();
                chunks.push(chunk);
                bytesLeft -= chunk.length;
            }
        }
        return Buffer.concat(chunks);
    }
    isEmpty() {
        return this.length === 0;
    }
    byteLength() {
        let length = 0;
        let entry = this.head;
        while (entry) {
            length += entry.data.length;
            entry = entry.next;
        }
        return length;
    }
}
exports.DataQueue = DataQueue;
//# sourceMappingURL=data-queue.js.map